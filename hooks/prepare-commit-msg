#!/bin/bash

set -eu

commit_file=$1
commit_source=${2:-}
# Commit conventional types
com_con='\(feat\|fix\|docs\|perf\|refactor\|chore\|ci\|test\)'

# only add message if this commit is not linked to any commit already
if [[ -z "${commit_source}" ]]; then
    branch_name=$(git branch --show-current)
    message=

    if echo ${branch_name} |grep "^g/${com_con}/" > /dev/null; then
        # Github Format
        if echo ${branch_name} |grep "^g/${com_con}/[0-9]*" > /dev/null; then
            issue_no=$(echo ${branch_name} | sed "s~g/${com_con}/\([0-9]*\).*~\\2~")
            message="(#${issue_no})";
        fi
        if echo ${branch_name} |grep "^g/${com_con}/[^/]*/[^/]*/[0-9]*" > /dev/null; then
            repository=$(echo ${branch_name} | sed "s~g/${com_con}/\([^/]*/[^/]*\).*~\\2~")
            issue_no=$(echo ${branch_name} | sed "s~g/${com_con}/[^/]*/[^/]*/\([0-9]*\).*~\\2~")
            message="(${repository}#${issue_no})";
        fi

    elif echo ${branch_name} |grep "^j/${com_con}/" > /dev/null; then
        # Jira Format
        issue_no=$(echo ${branch_name} | sed "s~j/\(feat\|test\)/\([a-zA-Z]\+-[0-9]*\).*~\\2~")
        message="(${issue_no})"
    fi

    if [ -z ${message} ]; then exit 0; fi
    echo "${message}$(cat ${commit_file})" > ${commit_file}
fi

if [ -e ./.git/hooks/prepare-commit-msg ]; then
    ./.git/hooks/prepare-commit-msg "$@"
fi
